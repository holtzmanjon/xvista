#include "Vista.h"
	SUBROUTINE SNPHOT

	INCLUDE 'vistadisk/source/include/vistalink.inc'
	INCLUDE 'vistadisk/source/include/imagelink.inc'
	LOGICAL KEYCHECK
        PARAMETER (NMAX=500)
	INTEGER IMSN(NMAX), PSFSN(NMAX)
#ifdef __64BITADDRESS
        INTEGER*8 LOCFRAME(NMAX), LOCPSF(NMAX)
#else
        INTEGER LOCFRAME(NMAX), LOCPSF(NMAX)
#endif
	REAL*8 SNCRPIX1(NMAX), SNCRPIX2(NMAX)
        REAL JDMIN, JDMAX
	REAL*8 SNCRVAL1(NMAX), SNCRVAL2(NMAX), CD1_1(NMAX), CD1_2(NMAX), SCALE(NMAX), APCOR(NMAX)
	REAL*8 CD2_1(NMAX), CD2_2(NMAX), JD(NMAX), BACK(8,NMAX), PSFDX(NMAX), PSFFWHM(NMAX)
	REAL*8 GAIN(NMAX), RN(NMAX), LOWBAD(NMAX), HIGHBAD(NMAX), EXP(NMAX), AM(NMAX)
        REAL*8 DISTORT(10,2,NMAX), SKYRAT(NMAX)
        REAL TMP(NMAX)
	INTEGER SNCNPIX1(NMAX), SNCNPIX2(NMAX), HAVEDISTORT(NMAX)
	INTEGER TELE(NMAX), FILT(NMAX), SNNX(NMAX), SNNY(NMAX), PSFN(NMAX)
	INTEGER CAMCOL(NMAX), FIELD(NMAX), SKIPGAL(NMAX)
        INTEGER FITSKY, SUB
	CHARACTER*80 TWORD, STARFILE, SNFILE, PARFILE, GALFILE
	CHARACTER PARM*8, CARD*8

	CALL KEYINIT
	CALL KEYDEF('IM=')
	CALL KEYDEF('PSF=')
	CALL KEYDEF('STARS=')
	CALL KEYDEF('SN=')
	CALL KEYDEF('GAL=')
	CALL KEYDEF('PAR=')
	CALL KEYDEF('NITER=')
	CALL KEYDEF('NGAL=')
	CALL KEYDEF('DXGAL=')
	CALL KEYDEF('NVAR=')
	CALL KEYDEF('MAXSTAR=')
	CALL KEYDEF('DMAX=')
	CALL KEYDEF('FITSKY=')
	CALL KEYDEF('SUB=')
	CALL KEYDEF('LOCKSTARINTEN')
	CALL KEYDEF('LOCKSTARPOS')
	CALL KEYDEF('FITSTARPM')
	CALL KEYDEF('LOCKVPOS')
	CALL KEYDEF('LOCKVINTEN')
	CALL KEYDEF('LOCKGAL')
	CALL KEYDEF('LOCKFRAME')
	CALL KEYDEF('LOCKFRAMEINTEN')
	CALL KEYDEF('LOCKFRAMEPOS')
	CALL KEYDEF('LOCKFRAMEASTROM')
	CALL KEYDEF('JDMIN=')
	CALL KEYDEF('JDMAX=')

        STARFILE(1:1) = CHAR(0)
        SNFILE(1:1) = CHAR(0)
        PARFILE(1:1) = CHAR(0)
        GALFILE(1:1) = CHAR(0)
        NIM = 0
        MAXSTAR = -1
        NVAR = -1 
        NGAL = 5
        DMAX = 100.
        DXGAL = 1.0
        FITSKY = 1
        SUB = 0
        LOCK = 0
	JDMIN = -30.
	JDMAX = 180.
	DO 5501 I=1,NCON
          TWORD = WORD(I)
          L = UPPER(TWORD)
          IF (TWORD(1:3) .EQ. 'IM=') THEN
            CALL ASSIGNV(WORD(I),NMAX,TMP,NIM,PARM)
            IF (XERR) RETURN
	    DO J=1,NIM
              IMSN(J) = NINT(TMP(J))
            END DO
          ELSE IF (TWORD(1:4) .EQ. 'PSF=') THEN
            CALL ASSIGNV(WORD(I),NMAX,TMP,NPSF,PARM)
            IF (XERR) RETURN
	    DO J=1,NPSF
              PSFSN(J) = NINT(TMP(J))
            END DO
            IF (XERR) RETURN
          ELSE IF (TWORD(1:6) .EQ. 'STARS=') THEN
            STARFILE = WORD(I)(7:)
            L = INDEX(STARFILE, ' ')
            STARFILE(L:L) = CHAR(0)
          ELSE IF (TWORD(1:3) .EQ. 'SN=') THEN
            SNFILE = WORD(I)(4:)
            L = INDEX(SNFILE, ' ')
            SNFILE(L:L) = CHAR(0)
          ELSE IF (TWORD(1:4) .EQ. 'PAR=') THEN
            PARFILE = WORD(I)(5:)
            L = INDEX(PARFILE, ' ')
            PARFILE(L:L) = CHAR(0)
          ELSE IF (TWORD(1:4) .EQ. 'GAL=') THEN
            GALFILE = WORD(I)(5:)
            L = INDEX(GALFILE, ' ')
            GALFILE(L:L) = CHAR(0)
          ELSE IF (TWORD(1:6) .EQ. 'NITER=') THEN
            CALL ASSIGN(WORD(I),TMP,PARM)
            IF (XERR) RETURN
            NITER = NINT(TMP(1))
          ELSE IF (TWORD(1:5) .EQ. 'NGAL=') THEN
            CALL ASSIGN(WORD(I),TMP,PARM)
            IF (XERR) RETURN
            NGAL = NINT(TMP(1))
          ELSE IF (TWORD(1:6) .EQ. 'DXGAL=') THEN
            CALL ASSIGN(WORD(I),DXGAL,PARM)
            IF (XERR) RETURN
          ELSE IF (TWORD(1:5) .EQ. 'NVAR=') THEN
            CALL ASSIGN(WORD(I),TMP,PARM)
            IF (XERR) RETURN
            NVAR = NINT(TMP(1))
          ELSE IF (TWORD(1:8) .EQ. 'MAXSTAR=') THEN
            CALL ASSIGN(WORD(I),TMP,PARM)
            IF (XERR) RETURN
            MAXSTAR = NINT(TMP(1))
          ELSE IF (TWORD(1:7) .EQ. 'FITSKY=') THEN
            CALL ASSIGN(WORD(I),TMP,PARM)
            IF (XERR) RETURN
            FITSKY = NINT(TMP(1))
          ELSE IF (TWORD(1:4) .EQ. 'SUB=') THEN
            CALL ASSIGN(WORD(I),TMP,PARM)
            IF (XERR) RETURN
            SUB = NINT(TMP(1))
          ELSE IF (TWORD(1:5) .EQ. 'DMAX=') THEN
            CALL ASSIGN(WORD(I),DMAX,PARM)
            IF (XERR) RETURN
          ELSE IF (TWORD(1:6) .EQ. 'JDMAX=') THEN
            CALL ASSIGN(WORD(I),JDMAX,PARM)
            IF (XERR) RETURN
          ELSE IF (TWORD(1:6) .EQ. 'JDMIN=') THEN
            CALL ASSIGN(WORD(I),JDMIN,PARM)
            IF (XERR) RETURN
          ELSE IF (TWORD .EQ. 'LOCKSTARINTEN') THEN
            LOCK = LOCK + 1
          ELSE IF (TWORD .EQ. 'LOCKSTARPOS') THEN
            LOCK = LOCK + 2
          ELSE IF (TWORD .EQ. 'FITSTARPM') THEN
            LOCK = LOCK + 4
          ELSE IF (TWORD .EQ. 'LOCKGAL') THEN
            LOCK = LOCK + 8
          ELSE IF (TWORD .EQ. 'LOCKFRAME') THEN
            LOCK = LOCK + 16
          ELSE IF (TWORD .EQ. 'LOCKFRAMEINTEN') THEN
            LOCK = LOCK + 32
          ELSE IF (TWORD .EQ. 'LOCKFRAMEPOS') THEN
            LOCK = LOCK + 64
          ELSE IF (TWORD .EQ. 'LOCKFRAMEASTROM') THEN
            LOCK = LOCK + 128
          ELSE IF (TWORD .EQ. 'LOCKVPOS') THEN
            LOCK = LOCK + 256
          ELSE IF (TWORD .EQ. 'LOCKVINTEN') THEN
            LOCK = LOCK + 512
          END IF
5501	CONTINUE

	IF (.NOT. KEYCHECK()) THEN
          XERR = .TRUE.
          RETURN
        END IF

	IF (NIM .GT. NMAX) THEN
          PRINT *, 'Too many images specified on command line', NIM, NMAX
	  XERR = .TRUE.
	  RETURN
	END IF

        IF (NIM .NE. NPSF) THEN
          PRINT *, 'Number of PSFs dont match number of frames'
          XERR = .TRUE.
          RETURN
        END IF

	DO I=1,NIM
	  LOCFRAME(I) = IMLOC(IMSN(I))
          EXP(I) = 1
          AM(I) = 1.2
          CALL CCINHEAD('NAXIS1',HEADBUF(1,IMSN(I)),SNNX(I))
          CALL CCINHEAD('NAXIS2',HEADBUF(1,IMSN(I)),SNNY(I))
          CALL CCFHEAD('CRVAL1',HEADBUF(1,IMSN(I)),SNCRVAL1(I))
          CALL CCFHEAD('CRVAL2',HEADBUF(1,IMSN(I)),SNCRVAL2(I))
          CALL CCFHEAD('CD1_1',HEADBUF(1,IMSN(I)),CD1_1(I))
          CALL CCFHEAD('CD1_2',HEADBUF(1,IMSN(I)),CD1_2(I))
          CALL CCFHEAD('CD2_1',HEADBUF(1,IMSN(I)),CD2_1(I))
          CALL CCFHEAD('CD2_2',HEADBUF(1,IMSN(I)),CD2_2(I))
          CALL CCFHEAD('CRPIX1',HEADBUF(1,IMSN(I)),SNCRPIX1(I))
          CALL CCFHEAD('CRPIX2',HEADBUF(1,IMSN(I)),SNCRPIX2(I))
          CALL CCFHEAD('SCALE',HEADBUF(1,IMSN(I)),SCALE(I))
          CALL CCFHEAD('APCOR',HEADBUF(1,IMSN(I)),APCOR(I))
          CALL CCINHEAD('CNPIX1',HEADBUF(1,IMSN(I)),SNCNPIX1(I))
          CALL CCINHEAD('CNPIX2',HEADBUF(1,IMSN(I)),SNCNPIX2(I))
          CALL CCINHEAD('SKIPGAL',HEADBUF(1,IMSN(I)),SKIPGAL(I))
          CALL CCINHEAD('DISTORT',HEADBUF(1,IMSN(I)),HAVEDISTORT(I))
          IF (HAVEDISTORT(I) .GT. 0) THEN
           DO J=1,10
            IF (J .LT. 10) THEN
              WRITE(CARD,1001) J
            ELSE
              WRITE(CARD,1002) J
            END IF
1001	    FORMAT('X(',I1,',1)')
1002	    FORMAT('X(',I2,',1)')
            CALL CCFHEAD(CARD,HEADBUF(1,IMSN(I)),DISTORT(J,1,I))
            IF (J .LT. 10) THEN
              WRITE(CARD,1003) J
            ELSE
              WRITE(CARD,1004) J
            END IF
1003	    FORMAT('X(',I1,',2)')
1004	    FORMAT('X(',I2,',2)')
            CALL CCFHEAD(CARD,HEADBUF(1,IMSN(I)),DISTORT(J,2,I))
           END DO
          END IF
          CALL CCINHEAD('TELE',HEADBUF(1,IMSN(I)),TELE(I))
          CALL CCINHEAD('CAMCOL',HEADBUF(1,IMSN(I)),CAMCOL(I))
          CALL CCINHEAD('FIELD',HEADBUF(1,IMSN(I)),FIELD(I))
          CALL CCINHEAD('FILT',HEADBUF(1,IMSN(I)),FILT(I))
          CALL CCFHEAD('EXPTIME',HEADBUF(1,IMSN(I)),EXP(I))
          CALL CCFHEAD('AM',HEADBUF(1,IMSN(I)),AM(I))
          CALL CCFHEAD('BACK',HEADBUF(1,IMSN(I)),BACK(1,I))
          CALL CCFHEAD('BACKC',HEADBUF(1,IMSN(I)),BACK(2,I))
          CALL CCFHEAD('BACKR',HEADBUF(1,IMSN(I)),BACK(3,I))
          CALL CCFHEAD('BACKC2',HEADBUF(1,IMSN(I)),BACK(4,I))
          CALL CCFHEAD('BACKR2',HEADBUF(1,IMSN(I)),BACK(5,I))
          CALL CCFHEAD('BACKRC',HEADBUF(1,IMSN(I)),BACK(6,I))
          CALL CCFHEAD('BACKC0',HEADBUF(1,IMSN(I)),BACK(7,I))
          CALL CCFHEAD('BACKR0',HEADBUF(1,IMSN(I)),BACK(8,I))
          CALL CCFHEAD('SKYRAT',HEADBUF(1,IMSN(I)),SKYRAT(I))
          CALL CCFHEAD('MJD',HEADBUF(1,IMSN(I)),JD(I))
          CALL CCFHEAD('GAIN',HEADBUF(1,IMSN(I)),GAIN(I))
          CALL CCFHEAD('RN',HEADBUF(1,IMSN(I)),RN(I))
          CALL CCFHEAD('LOWBAD',HEADBUF(1,IMSN(I)),LOWBAD(I))
          CALL CCFHEAD('HIGHBAD',HEADBUF(1,IMSN(I)),HIGHBAD(I))
          CALL CCINHEAD('NAXIS1',HEADBUF(1,PSFSN(I)),PSFN(I))
          CALL CCFHEAD('CDELT1',HEADBUF(1,PSFSN(I)),PSFDX(I))
          CALL CCFHEAD('FWHMPIX',HEADBUF(1,PSFSN(I)),PSFFWHM(I))
          IF (SCALE(I) .EQ. 0) SCALE(I) = 1.
          IF (APCOR(I) .EQ. 0) APCOR(I) = 1.
          LOCPSF(I) = IMLOC(PSFSN(I))
        END DO

        CALL DOSNPHOT(NIM, LOCFRAME, SNNX, SNNY, SCALE, APCOR,
     &         SNCRVAL1, SNCRVAL2, CD1_1, CD1_2, CD2_1, CD2_2,
     &         SNCRPIX1, SNCRPIX2, SNCNPIX1, SNCNPIX2, HAVEDISTORT, DISTORT,
     &         SKIPGAL, TELE, CAMCOL, FIELD, FILT, BACK, SKYRAT, JD,
     &         EXP, AM, GAIN, RN, LOWBAD, HIGHBAD,
     &         LOCPSF, PSFN, PSFDX, PSFFWHM, NITER, NVAR, NGAL, DXGAL, MAXSTAR, DMAX, FITSKY,
     &         SUB, LOCK, JDMIN, JDMAX, STARFILE, SNFILE, GALFILE, PARFILE)

	DO I=1,NIM
          TEMPHEAD = ' '
	  CALL CCVSTRCPY(TEMPHEAD,HEADBUF(1,IMSN(I)))
          CALL FHEADSET('CD1_1',CD1_1(I),TEMPHEAD)
          CALL FHEADSET('CD1_2',CD1_2(I),TEMPHEAD)
          CALL FHEADSET('CD2_1',CD2_1(I),TEMPHEAD)
          CALL FHEADSET('CD2_2',CD2_2(I),TEMPHEAD)
          CALL FHEADSET('CRPIX1',SNCRPIX1(I),TEMPHEAD)
          CALL FHEADSET('CRPIX2',SNCRPIX2(I),TEMPHEAD)
          CALL FHEADSET('SCALE',SCALE(I),TEMPHEAD)
          CALL FHEADSET('APCOR',APCOR(I),TEMPHEAD)
          CALL CCVSTRADD(HEADBUF(1,IMSN(I)),TEMPHEAD)
        END DO

	RETURN
	END	
