#    ********* DO NOT EDIT THIS FILE *********
#  It is automatically generated and your changes will not be used! 
MACHINE=macosx
CPP=/usr/bin/cpp
INCCPP=/usr/bin/cpp
FPP=for
CPPFLAGS=-DX11_exists -I/usr/X11/include -traditional -P
CC=cc
CFLAGS=-O -DX11_exists -I/usr/X11/include -DFORT -DUNIX -I/usr/include/bsd -I/sw/include
FC=gfortran
FFLAGS=-O -ffixed-line-length-132 
LD=gfortran
LDFLAGS=-L/sw/lib
RM=rm
AR=ar
DX11=-DX11_exists -I/usr/X11/include
X11DEV=x11_.o x11.o xgets.o trackbox.o
LX11DEV=$(MLIB)(x11_.o) $(MLIB)(x11.o) $(MLIB)(xgets.o) $(MLIB)(trackbox.o)
X11LIB=-L/usr/X11/lib64 -L/usr/X11/lib -lX11
SUNIEEE=
OPTFLAG=
BSTATIC=-lgcc
DOOBJS=$(LOBJS)
MAR=
MRM=$(RM) *.o
LREADLINE=
WCSLIB=
MLIB=../../../lib/tape.$(MACHINE).a
VMSTREE=/usr/tmp/vista                                                          
OBJS=astape.o docmnd.o dospc.o endfil.o ltapch.o ltapos.o ltapst.o opchk.o     \
rtape.o rwnd.o sntape.o spaceb.o spacef.o tapeclose.o uchk.o wtape.o
LOBJS=$(MLIB)(astape.o) $(MLIB)(docmnd.o) $(MLIB)(dospc.o) $(MLIB)(endfil.o)   \
$(MLIB)(ltapch.o) $(MLIB)(ltapos.o) $(MLIB)(ltapst.o) $(MLIB)(opchk.o)         \
$(MLIB)(rtape.o) $(MLIB)(rwnd.o) $(MLIB)(sntape.o) $(MLIB)(spaceb.o)           \
$(MLIB)(spacef.o) $(MLIB)(tapeclose.o) $(MLIB)(uchk.o) $(MLIB)(wtape.o)
#
#       Teach make how to do a number of things that certain systems don't know
.SUFFIXES:
.SUFFIXES: .out .o .c .e .r .F .f .y .l .s .p
.F.o:
	$(CPP) $(CPPFLAGS) $*.F $*.$(FPP)
	$(FC) -c $(FFLAGS) $*.$(FPP)
	$(RM) -f $*.$(FPP)
.F.a:
	$(CPP) $(CPPFLAGS) $< $*.$(FPP)
	$(FC) -c $(FFLAGS) $*.$(FPP)
	$(AR) rv $@ $*.o
	$(RM) -f $*.$(FPP) 
	rm -f $*.o
.f.a:
	$(FC) -c $(FFLAGS) $*.f
	$(AR) rv $@ $*.o
	rm -f $*.o
.F.inc: ; $(CPP) $(CPPFLAGS) $*.F $*.inc

#       Teach make how to make files for export to a VMS system
.SUFFIXES: .vmsf .for .inc .vmsc .com
.vmsf.for: ; cp $*.vmsf $*.for
.vmsc.com: ; cp $*.vmsc $*.com
.f.for: ; cp $*.f $*.for
.F.for: ; $(CPP) $(VMSFLAGS) $*.F $*.for
#
datefile::Vista.h $(MLIB) tidy
	date > datefile
#       Don't let make delete the object library!
.PRECIOUS: $(MLIB)
#
$(MLIB): $(DOOBJS)
	$(MAR)
	$(MRM)
	-ranlib $(MLIB)
clean:
	-rm *.o \#* *.bak
tidy:
	-rm Vista.h datefile
Vista.h:
	ln -s ../Vista.$(MACHINE) Vista.h
#       THE FOLLOWING STUFF MAKES CODE FOR THE VAXen
avmscode: Vista.h.avms $(VMSCODE)
	-mkdir $(VMSTREE)/source/base
	mv *.for $(VMSTREE)/source/base
	cp *.c $(VMSTREE)/source/base
	cp ../Vista.avms $(VMSTREE)/source/base/Vista.h
	-rm Vista.h avmscode
	date >  avmscode
Vista.h.avms:
	-rm Vista.h
	ln -s ../Vista.avms Vista.h
uvmscode: Vista.h.uvms $(VMSCODE)
	-mkdir $(VMSTREE)/source/base
	mv *.for $(VMSTREE)/source/base
	cp *.c $(VMSTREE)/source/base
	cp ../Vista.uvms $(VMSTREE)/source/base/Vista.h
	-rm Vista.h uvmscode
	date >  uvmscode
Vista.h.uvms:
	-rm Vista.h
	ln -s ../Vista.uvms Vista.h
pvmscode: Vista.h.pvms $(VMSCODE)
	-mkdir $(VMSTREE)/source/base
	mv *.for $(VMSTREE)/source/base
	cp *.c $(VMSTREE)/source/base
	cp ../Vista.pvms $(VMSTREE)/source/base/Vista.h
	-rm Vista.h pvmscode
	date >  pvmscode
Vista.h.pvms:
	-rm Vista.h
	ln -s ../Vista.pvms Vista.h
