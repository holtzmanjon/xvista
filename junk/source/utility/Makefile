#    ********* DO NOT EDIT THIS FILE *********
#  It is automatically generated and your changes will not be used! 
MACHINE=macosx
CPP=/usr/bin/cpp
INCCPP=/usr/bin/cpp
FPP=for
CPPFLAGS=-DX11_exists -I/usr/X11/include -traditional -P
CC=cc
CFLAGS=-O -DX11_exists -I/usr/X11/include -DFORT -DUNIX -I/usr/include/bsd -I/sw/include
FC=gfortran
FFLAGS=-O -ffixed-line-length-132 
LD=gfortran
LDFLAGS=-L/sw/lib
RM=rm
AR=ar
DX11=-DX11_exists -I/usr/X11/include
X11DEV=x11_.o x11.o xgets.o trackbox.o
LX11DEV=$(MLIB)(x11_.o) $(MLIB)(x11.o) $(MLIB)(xgets.o) $(MLIB)(trackbox.o)
X11LIB=-L/usr/X11/lib64 -L/usr/X11/lib -lX11
SUNIEEE=
OPTFLAG=
BSTATIC=-lgcc
DOOBJS=$(LOBJS)
MAR=
MRM=$(RM) *.o
LREADLINE=
WCSLIB=
MLIB=../../lib/utility.$(MACHINE).a
VMSTREE=/usr/tmp/vista
OBJS=assign.o assignv.o bessj1.o bin.o builtin.o cio.o utility.o copio.o   \
createim.o deflist.o dissect.o escape.o esetpoly.o\
eval.o im_write.o \
exp_file_sh.o exp_short.o exp_util.o \
com_file_sh.o com_short.o com_util.o \
exp_file_long.o exp_long.o com_file_long.o com_long.o \
filedef.o findcent.o findlim.o fitshead.o fourhead.o       \
gaussj.o gaussone.o genchar.o getbox.o getcoord.o getdata.o gethead.o gethjd.o \
getimage.o getimdata.o getimnum.o glls.o gnlls.o header.o headset.o  \
headtow.o heljd.o histclip.o histfit.o \
initial.o key.o lampix.o logvalue.o mathsubs.o \
makearray.o mask.o meanseg.o median.o newspline.o numchar.o  \
photfiles.o pixlam.o push.o radec.o redirect.o regress.o setpoly.o shiftit.o   \
sincgen.o solve.o sorter.o spoly.o startof.o strcpy.o string.o substoot.o      \
subvar.o syserrprint.o time.o trig.o tspline.o unfit.o unpack.o      \
upper.o variable.o vtg100.o wait.o gnlls1.o fitsio.o vistio.o polysubs.o
LOBJS=$(MLIB)(assign.o) $(MLIB)(assignv.o) $(MLIB)(bessj1.o) $(MLIB)(bin.o)    \
$(MLIB)(builtin.o) $(MLIB)(cio.o) $(MLIB)(utility.o) $(MLIB)(copio.o)      \
$(MLIB)(createim.o) $(MLIB)(deflist.o)                 \
$(MLIB)(dissect.o) $(MLIB)(escape.o) $(MLIB)(esetpoly.o)\
$(MLIB)(exp_file_sh.o) $(MLIB)(exp_short.o) $(MLIB)(exp_util.o) \
$(MLIB)(com_file_sh.o) $(MLIB)(com_short.o) $(MLIB)(com_util.o) \
$(MLIB)(exp_file_long.o) $(MLIB)(exp_long.o) \
$(MLIB)(com_file_long.o) $(MLIB)(com_long.o) $(MLIB)(im_write.o) \
$(MLIB)(eval.o) $(MLIB)(filedef.o) $(MLIB)(findcent.o) \
$(MLIB)(findlim.o) $(MLIB)(fitshead.o) $(MLIB)(fourhead.o) $(MLIB)(gaussj.o)   \
$(MLIB)(gaussone.o) $(MLIB)(genchar.o) $(MLIB)(getbox.o) $(MLIB)(getcoord.o)   \
$(MLIB)(getdata.o) $(MLIB)(gethead.o) $(MLIB)(gethjd.o) $(MLIB)(getimage.o)    \
$(MLIB)(getimdata.o) $(MLIB)(getimnum.o) $(MLIB)(glls.o)    \
$(MLIB)(gnlls.o) $(MLIB)(header.o) $(MLIB)(headset.o) $(MLIB)(headtow.o)       \
$(MLIB)(heljd.o) $(MLIB)(histclip.o) $(MLIB)(histfit.o) $(MLIB)(initial.o)  \
$(MLIB)(key.o) $(MLIB)(lampix.o) $(MLIB)(mathsubs.o)      \
$(MLIB)(logvalue.o) $(MLIB)(makearray.o) $(MLIB)(mask.o) $(MLIB)(meanseg.o)      \
$(MLIB)(median.o) $(MLIB)(newspline.o) $(MLIB)(numchar.o) $(MLIB)(photfiles.o) \
$(MLIB)(pixlam.o) $(MLIB)(push.o) $(MLIB)(radec.o) $(MLIB)(redirect.o)         \
$(MLIB)(regress.o) $(MLIB)(setpoly.o) $(MLIB)(shiftit.o) $(MLIB)(sincgen.o)    \
$(MLIB)(solve.o) $(MLIB)(sorter.o) $(MLIB)(spoly.o) $(MLIB)(startof.o)         \
$(MLIB)(strcpy.o) $(MLIB)(string.o) $(MLIB)(substoot.o) $(MLIB)(subvar.o)      \
$(MLIB)(syserrprint.o) $(MLIB)(time.o) $(MLIB)(trig.o) $(MLIB)(tspline.o) \
$(MLIB)(unfit.o) $(MLIB)(unpack.o) $(MLIB)(upper.o)          \
$(MLIB)(variable.o) $(MLIB)(vtg100.o) $(MLIB)(wait.o) $(MLIB)(gnlls1.o)        \
$(MLIB)(fitsio.o) $(MLIB)(vistio.o) $(MLIB)(polysubs.o) $(MLIB)(assigns.o) $(MLIB)(ran.o) $(MLIB)(precess.o) $(MLIB)(asinh.o) 
VMSCODE=assign.for assignv.for bessj1.for bin.for builtin.for \
copio.for createim.for deflist.for            \
dissect.for escape.for esetpoly.for eval.for \
filedef.for findcent.for findlim.for fitshead.for fourhead.for gaussj.for      \
gaussone.for getbox.for getcoord.for getdata.for gethead.for       \
gethjd.for getimage.for getimdata.for getimnum.for glls.for        \
gnlls.for header.for headset.for headtow.for heljd.for histclip.for histfit.for\
ibcicu.for ibcieu.for icsccu.for icsevu.for initial.for key.for lampix.for     \
leqt1f.for linv3f.for logvalue.for ludatf.for ludatn.for luelmf.for luelmn.for \
mask.for mathsubs.for meanseg.for median.for newspline.for numchar.for        \
photfiles.for pixlam.for push.for radec.for redirect.for regress.for           \
setpoly.for shiftit.for sincgen.for solve.for sorter.for spoly.for startof.for \
strcpy.for string.for substoot.for subvar.for syserrprint.for time.for         \
uerset.for uertst.for ugetio.for unfit.for upper.for variable.for   \
vtg100.for wait.for gnlls1.for fitsio.for vistio.for polysubs.for tspline.for
#
#       Teach make how to do a number of things that certain systems don't know
.SUFFIXES:
.SUFFIXES: .out .o .c .e .r .F .f .y .l .s .p .a
.F.o:
	$(CPP) $(CPPFLAGS) $*.F $*.$(FPP)
	$(FC) -c $(FFLAGS) $*.$(FPP)
	$(RM) -f $*.$(FPP)
.F.a:
	$(CPP) $(CPPFLAGS) $< $*.$(FPP)
	$(FC) -c $(FFLAGS) $*.$(FPP)
	$(AR) rv $@ $*.o
	$(RM) -f $*.$(FPP) 
	rm -f $*.o
.f.a:
	$(FC) -c $(FFLAGS) $*.f
	$(AR) rv $@ $*.o
	rm -f $*.o
.F.inc: ; $(CPP) $(CPPFLAGS) $*.F $*.inc
.c.a:
	$(CC) -c $(CFLAGS) $*.c
	$(AR) rv $@ $*.o
	rm -f $*.o


#       Teach make how to make files for export to a VMS system
.SUFFIXES: .vmsf .for .inc .vmsc .com
.vmsf.for: ; cp $*.vmsf $*.for
.vmsc.com: ; cp $*.vmsc $*.com
.f.for: ; cp $*.f $*.for
.F.for: ; $(CPP) $(VMSFLAGS) $*.F $*.for
#
datefile::Vista.h $(MLIB) tidy
	date > datefile
#       Don't let make delete the object library!
.PRECIOUS: $(MLIB)
#
$(MLIB): $(DOOBJS)
	$(MAR)
	-$(MRM)
	-ranlib $(MLIB)
#initial.o:          initial.F ../Vista.$(MACHINE)
#$(MLIB)(initial.o): initial.F ../Vista.$(MACHINE)

#exp_file_sh.o: expand_file_generic.c im_compress.h
#	cp expand_file_generic.c exp_file_sh.c
#	$(CC) -c $(CFLAGS) -DDATA_TYPE=2 -DBASE_TYPE=2 exp_file_sh.c
#	rm exp_file_sh.c
#
#exp_short.o: expansion_generic.c im_compress.h
#	cp expansion_generic.c exp_short.c
#	$(CC) -c $(CFLAGS) -DDATA_TYPE=2 -DBASE_TYPE=2 exp_short.c
#	rm exp_short.c
#
#exp_file_long.o: expand_file_generic.c im_compress.h
#	cp expand_file_generic.c exp_file_long.c
#	$(CC) -c $(CFLAGS) -DDATA_TYPE=4 -DBASE_TYPE=2 exp_file_long.c
#	rm exp_file_long.c
#
#exp_long.o: expansion_generic.c im_compress.h
#	cp expansion_generic.c exp_long.c
#	$(CC) -c $(CFLAGS) -DDATA_TYPE=4 -DBASE_TYPE=2 exp_long.c
#	rm exp_long.c
#
#exp_util.o: expansion_util.c im_compress.h
#	cp expansion_util.c exp_util.c
#	$(CC) -c $(CFLAGS) exp_util.c
#
#com_file_short.o: compress_file_generic.c im_compress.h
#	cp compress_file_generic.c com_file_sh.c
#	$(CC) -c $(CFLAGS) -DDATA_TYPE=2 -DBASE_TYPE=2 com_file_sh.c
#	rm com_file_sh.c
#
#com_short.o: compression_generic.c im_compress.h
#	cp compression_generic.c com_short.c
#	$(CC) -c $(CFLAGS) -DDATA_TYPE=2 -DBASE_TYPE=2 com_short.c
#	rm com_short.c
#
#com_file_long.o: compress_file_generic.c im_compress.h
#	cp compress_file_generic.c com_file_long.c
#	$(CC) -c $(CFLAGS) -DDATA_TYPE=4 -DBASE_TYPE=2 com_file_long.c
#	rm com_file_long.c
#
#com_long.o: compression_generic.c im_compress.h
#	cp compression_generic.c com_long.c
#	$(CC) -c $(CFLAGS) -DDATA_TYPE=4 -DBASE_TYPE=2 com_long.c
#	rm com_long.c
#
#com_util.o: compression_util.c im_compress.h
#	cp compression_util.c com_util.c
#	$(CC) -c $(CFLAGS) com_util.c
#
$(MLIB)(exp_file_sh.o): expand_file_generic.c im_compress.h
	cp expand_file_generic.c exp_file_sh.c
	$(CC) -c $(CFLAGS) -DDATA_TYPE=2 -DBASE_TYPE=2 exp_file_sh.c
	$(AR) rv $(MLIB) exp_file_sh.o
	rm exp_file_sh.c exp_file_sh.o

$(MLIB)(exp_short.o): expansion_generic.c im_compress.h
	cp expansion_generic.c exp_short.c
	$(CC) -c $(CFLAGS) -DDATA_TYPE=2 -DBASE_TYPE=2 exp_short.c
	$(AR) rv $(MLIB) exp_short.o
	rm exp_short.c exp_short.o

$(MLIB)(exp_file_long.o): expand_file_generic.c im_compress.h
	cp expand_file_generic.c exp_file_long.c
	$(CC) -c $(CFLAGS) -DDATA_TYPE=4 -DBASE_TYPE=2 exp_file_long.c
	$(AR) rv $(MLIB) exp_file_long.o
	rm exp_file_long.c exp_file_long.o

$(MLIB)(exp_long.o): expansion_generic.c im_compress.h
	cp expansion_generic.c exp_long.c
	$(CC) -c $(CFLAGS) -DDATA_TYPE=4 -DBASE_TYPE=2 exp_long.c
	$(AR) rv $(MLIB) exp_long.o
	rm exp_long.c exp_long.o

$(MLIB)(exp_util.o): expansion_util.c im_compress.h
	cp expansion_util.c exp_util.c
	$(CC) -c $(CFLAGS) exp_util.c
	$(AR) rv $(MLIB) exp_util.o
	rm exp_util.o

$(MLIB)(com_file_sh.o): compress_file_generic.c im_compress.h
	cp compress_file_generic.c com_file_sh.c
	$(CC) -c $(CFLAGS) -DDATA_TYPE=2 -DBASE_TYPE=2 com_file_sh.c
	$(AR) rv $(MLIB) com_file_sh.o
	rm com_file_sh.c com_file_sh.o

$(MLIB)(com_short.o): compression_generic.c im_compress.h
	cp compression_generic.c com_short.c
	$(CC) -c $(CFLAGS) -DDATA_TYPE=2 -DBASE_TYPE=2 com_short.c
	$(AR) rv $(MLIB) com_short.o
	rm com_short.c com_short.o

$(MLIB)(com_file_long.o): compress_file_generic.c im_compress.h
	cp compress_file_generic.c com_file_long.c
	$(CC) -c $(CFLAGS) -DDATA_TYPE=4 -DBASE_TYPE=2 com_file_long.c
	$(AR) rv $(MLIB) com_file_long.o
	rm com_file_long.c com_file_long.o

$(MLIB)(com_long.o): compression_generic.c im_compress.h
	cp compression_generic.c com_long.c
	$(CC) -c $(CFLAGS) -DDATA_TYPE=4 -DBASE_TYPE=2 com_long.c
	$(AR) rv $(MLIB) com_long.o
	rm com_long.c com_long.o

$(MLIB)(com_util.o): compression_util.c im_compress.h
	cp compression_util.c com_util.c
	$(CC) -c $(CFLAGS) com_util.c
	$(AR) rv $(MLIB) com_util.o
	rm com_util.o

$(MLIB)(im_write.o): im_write.c
	$(CC) -c $(CFLAGS) im_write.c
	$(AR) rv $(MLIB) im_write.o
	rm im_write.o

clean:
	-rm *.o \#* *.bak
tidy:
	-rm Vista.h datefile
Vista.h:
	ln -s ../Vista.$(MACHINE) Vista.h
#       THE FOLLOWING STUFF MAKES CODE FOR THE VAXen
avmscode: Vista.h.avms $(VMSCODE)
	-mkdir $(VMSTREE)/source/utility
	mv *.for $(VMSTREE)/source/utility
	cp *.c $(VMSTREE)/source/utility
	cp *.h $(VMSTREE)/source/utility
	cp ../Vista.avms $(VMSTREE)/source/utility/Vista.h
	-rm Vista.h avmscode
	date >  avmscode
Vista.h.avms:
	-rm Vista.h
	ln -s ../Vista.avms Vista.h
uvmscode: Vista.h.uvms $(VMSCODE)
	-mkdir $(VMSTREE)/source/utility
	mv *.for $(VMSTREE)/source/utility
	cp *.c $(VMSTREE)/source/utility
	cp *.h $(VMSTREE)/source/utility
	cp ../Vista.uvms $(VMSTREE)/source/utility/Vista.h
	-rm Vista.h uvmscode
	date >  uvmscode
Vista.h.uvms:
	-rm Vista.h
	ln -s ../Vista.uvms Vista.h
pvmscode: Vista.h.pvms $(VMSCODE)
	-mkdir $(VMSTREE)/source/utility
	mv *.for $(VMSTREE)/source/utility
	cp *.c $(VMSTREE)/source/utility
	cp *.h $(VMSTREE)/source/utility
	cp ../Vista.pvms $(VMSTREE)/source/utility/Vista.h
	-rm Vista.h pvmscode
	date >  pvmscode
Vista.h.pvms:
	-rm Vista.h
	ln -s ../Vista.pvms Vista.h
