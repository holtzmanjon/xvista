#       ** COPYRIGHT ****  COPYRIGHT ****  COPYRIGHT ****  COPYRIGHT **
#       This makefile is Copyright (c) 1987 Steven L. Allen
#       The file COPYRIGHT must accompany this file.  See it for details.
#       ** COPYRIGHT ****  COPYRIGHT ****  COPYRIGHT ****  COPYRIGHT **
#
MLIB=../../../lib/libmgo.$(MACHINE).a
#       Define where the temporary VMS source code tree will be made
VMSTREE=/usr/tmp
VMSCODE=compile.com aedstart.for device.for grin270.for \
	hp2648.for hpgl.for mtmpfile.for psdriver.for \
	plcurse.for t4010.for uis.for vecfile.for vt125.for
DOBJS=$(ISIDEV) $(GSIDEV) $(EPSDEV) $(SUNDEV) $(X11DEV)


OBJS=device.o hp2648.o hpgl.o t4010.o mtmpfile.o psdriver.o \
     plcurse.o vecfile.o vt125.o setpipe.o $(DOBJS)


LOBJS=$(MLIB)(device.o) $(MLIB)(hp2648.o) $(MLIB)(hpgl.o) $(MLIB)(t4010.o) \
      $(MLIB)(mtmpfile.o) $(MLIB)(setpipe.o) \
      $(MLIB)(psdriver.o) $(MLIB)(plcurse.o) \
      $(MLIB)(vecfile.o) $(MLIB)(vt125.o) $(LX11DEV) $(LSUNDEV)




#########
#       Teach make how to do a number of things that certain systems don't know
.SUFFIXES:
.SUFFIXES: .out .o .c .e .r .F .f .y .l .s .p .inc .F .a
	#echo .F.o rule at is $@ star is $* come is $< q is $? ata is $$@
.F.o:
	$(CPP) $(CPPFLAGS) $*.F $*.$(FPP)
	$(FC) -c $(FFLAGS) $*.$(FPP)
	$(RM) -f $*.$(FPP)
.F.a:
	$(CPP) $(CPPFLAGS) $< $*.$(FPP)
	$(FC) -c $(FFLAGS) $*.$(FPP)
	$(AR) rv $@ $*.o
	$(RM) -f $*.$(FPP) 
	rm -f $*.o
.f.a:
	$(FC) -c $(FFLAGS) $*.f
	$(AR) rv $@ $*.o
	rm -f $*.o
.F.inc: ; $(INCCPP) $(CPPFLAGS) $*.F  $*.inc
.c.a:
	$(CC) -c $(CFLAGS) $*.c
	$(AR) rv $@ $*.o
	rm -f $*.o

#       Teach make how to make files for export to a VMS system
.SUFFIXES: .vmsf .for .vmsc .com
.vmsf.for: ; cp $*.vmsf $*.for
.vmsc.com: ; cp $*.vmsc $*.com
.F.for: ; $(CPP) $(VMSFLAGS) $*.F $*.for
.f.for: ; cp $*.f $*.for
#########
#
datefile::Config.$(MACHINE) Config.h MONGOFIL.inc MONGOLUN.inc \
	MONGOPAR.inc MONGODEV.inc $(MLIB)
	@echo echo mlib $(MLIB)
	@echo echo lobjs "$(LOBJS)"
	@echo echo mar "$(MAR)"
	-rm MONGO*.inc
	date > datefile
#       Don't let make delete the mongo object library!
.PRECIOUS: $(MLIB)
#
#       Either LOBJS or OBJS should be an empty string
#       This is done by forcing environment variables to override internal ones
$(MLIB): $(DOOBJS)
	$(MAR)
	-$(MRM)
	-ranlib $(MLIB)
clean:  tidy
	-rm -f *.o Config.* MONGO*.inc
tidy:
	-rm -f datefile *vmscode pccode a.out *.trace \#* *.bak 
#########
#       The present configuration of the MONGO* files allows for a single
#       NFS-mounted copy of the source code to generate binaries for several
#       different machine architectures IF AND ONLY IF all those machines
#       have the /bin/make which knows how to look at object files which are
#       being stored in archives (libraries) of object files.
#       CAVEAT:  Only one architecture can be "make"ing at a time.
Config.h:  Config.$(MACHINE)
	ln -s ../Config.$(MACHINE) Config.h
#       We use Config.$(MACHINE) as an indicator of the last architecture "make"d
Config.$(MACHINE):
	-rm -f Config.* MONGO*.inc
	ln -s ../Config.$(MACHINE) .
#       The MONGO*.inc files must be preprocessed for the right architecture
MONGOLUN.inc: MONGOLUN.F Config.h
MONGOPAR.inc: MONGOPAR.F Config.h
MONGOFIL.inc: MONGOFIL.F Config.h
MONGODEV.inc: MONGODEV.F Config.h
#########















#########
#       Exports to non-Unix systems
nonunix:
	-mkdir          $(VMSTREE)/lickmongo
	-mkdir          $(VMSTREE)/lickmongo/source
	-mkdir          $(VMSTREE)/lickmongo/source/devices
	-mv *.for       $(VMSTREE)/lickmongo/source/devices
	-mv *.com       $(VMSTREE)/lickmongo/source/devices
	-cp [a-z]*.inc  $(VMSTREE)/lickmongo/source/devices
	-rm Config.h

#       THE FOLLOWING STUFF MAKES CODE FOR EXPORT TO VMS VAXen
vmscode: Config.h.vms $(VMSCODE) nonunix
	date > vmscode
Config.h.vms:
	-rm Config.h
	ln -s ../Config.vms  Config.h
#
uvmscode:Config.h.uvms $(VMSCODE) nonunix
	date > uvmscode
Config.h.uvms:
	-rm Config.h
	ln -s ../Config.uvms Config.h
#
bvmscode:Config.h.bvms $(VMSCODE) nonunix
	date > bvmscode
Config.h.bvms:
	-rm Config.h
	ln -s ../Config.bvms Config.h
#
pccode:Config.h.pc $(VMSCODE) nonunix
#       date > pccode
Config.h.pc:
	-rm Config.h
	ln -s ../Config.pc Config.h
