#       ** COPYRIGHT ****  COPYRIGHT ****  COPYRIGHT ****  COPYRIGHT **
#       This makefile is Copyright (c) 1987 Steven L. Allen
#       The file COPYRIGHT must accompany this file.  See it for details.
#       ** COPYRIGHT ****  COPYRIGHT ****  COPYRIGHT ****  COPYRIGHT **
#
INSTALLDIR=/usr/local
BINDIR=../bin
#       Define where the temporary VMS source code tree will be made
VMSTREE=/usr/tmp
VMSCODE=library.com link.com make.com MONGOLUN.inc MONGOPAR.inc \
	MONGODEV.inc MONGOFIL.inc
#       Teach make how to make files for export to a VMS system
.SUFFIXES: .vmsc .com .vmsd .dat .F .inc
.vmsc.com: ; $(CPP) $(VMSFLAGS) < $*.vmsc | sed '/^$$/d' > $*.com
.vmsd.dat: ; cp $*.vmsd $*.dat
.F.inc:    ; $(CPP) $(VMSFLAGS) $*.F $*.inc
#
datefile::Config.h mongolib mongo.$(MACHINE)
	date > datefile
#       Don't let make delete the mongo object library!
.PRECIOUS: libmgo.$(MACHINE).a
#               Note that we do not make any hardcopy code on unix systems
#########
#       The present configuration of the MONGO* files allows for a single
#       NFS-mounted copy of the source code to generate binaries for several
#       different machine architectures IF AND ONLY IF all those machines
#       have the /bin/make which knows how to look at object files which are
#       being stored in archives (libraries) of object files.
#       CAVEAT:  Only one architecture can be "make"ing at a time.
#
#       In this directory, Config.h indicates the last architecture "make"d
Config.h: Config.$(MACHINE)
	-rm Config.h
	ln -s Config.$(MACHINE) Config.h
mongo: mongo.$(MACHINE)
mongo.$(MACHINE): ../../lib/libmgo.$(MACHINE).a
	ar xv ../../lib/libmgo.$(MACHINE).a touva.o
	-rm mongo.$(MACHINE)
	$(FC) -o ../../bin/lmongo.$(MACHINE) ${LDFLAGS} touva.o \
	../../lib/libmgo.$(MACHINE).a \
	$(LREADLINE) $(GSILIBS) $(ISIOVW) $(SUNWINDOW) $(X11LIB) $(BSTATIC)
	-rm touva.o
#	@echo "Don't forget to 'make install' after testing."
	-rm touva.o
mongolib:
	(cd devices        ; make -k)
	(cd interact       ; make -k)
	(cd plotsub        ; make -k)
	(cd sysunix        ; make -k)
#       (cd fontutil       ; make -k)
# mongolib.a:
#        ar r mongolib.a
install: mongo.$(MACHINE)
	-rm $(INSTALLDIR)/lib/libmongo.a
	-ln ../../lib/libmgo.$(MACHINE).a $(INSTALLDIR)/lib/libmongo.a
	-rm $(INSTALLDIR)/bin/lmongo
	ln ../../bin/lmongo.$(MACHINE) $(INSTALLDIR)/bin/lmongo
clean:
	-rm -f lmongo libmgo.$(MACHINE).a nongo Config.h MONGO*.inc \
	*vmscode a.out *.trace \#* *.bak
	(cd devices        ; make clean)
	(cd interact       ; make clean)
	(cd plotsub        ; make clean)
	(cd sysunix        ; make clean)
#	(cd fontutil       ; make clean)
#	(cd sysvms         ; make clean)
tidy:
	-rm -f nongo *vmscode a.out *.trace \#* *.bak
	(cd devices        ; make tidy)
	(cd interact       ; make tidy)
	(cd plotsub        ; make tidy)
	(cd sysunix        ; make tidy)
#	(cd fontutil       ; make tidy)
#	(cd sysvms         ; make tidy)
########################################
#       This will write the directory tree of VMS code to tape.
#       Note the hardwired tapedrive name.
vmstape:
#       cd $(VMSTREE) ; vmsprep - lickmongo | ansitape cvlnf MONGO - /dev/rmt0
	cd $(VMSTREE) ; vmsprep - lickmongo | ansitape cvlnf MONGO - /dev/srmt0
#
#       Exports to non-Unix systems
nonunix:
	-mkdir          $(VMSTREE)/lickmongo
	-mkdir          $(VMSTREE)/lickmongo/source
	-mv *.com       $(VMSTREE)/lickmongo/source
	-mv *.inc       $(VMSTREE)/lickmongo/source
	-cp COPYRIGHT   $(VMSTREE)/lickmongo/source
#       THE FOLLOWING STUFF MAKES CODE FOR THE VMS/VAXen
vmscode: Config.h.vms link.com $(VMSCODE) nonunix
	(cd devices       ; make vmscode)
	(cd interact      ; make vmscode)
	(cd plotsub       ; make vmscode)
	(cd raster        ; make vmscode)
	(cd sysvms        ; make vmscode)
	rm Config.h
	date > vmscode
Config.h.vms:
	-rm Config.h
	ln -s Config.vms  Config.h
uvmscode: Config.h.uvms link.com $(VMSCODE) nonunix
	(cd devices       ; make uvmscode)
	(cd interact      ; make uvmscode)
	(cd plotsub       ; make uvmscode)
	(cd raster        ; make uvmscode)
	(cd sysvms        ; make uvmscode)
	rm Config.h
	date > uvmscode
Config.h.uvms:
	-rm Config.h
	ln -s Config.uvms Config.h
bvmscode: Config.h.bvms link.com $(VMSCODE) nonunix
	(cd devices       ; make bvmscode)
	(cd interact      ; make bvmscode)
	(cd plotsub       ; make bvmscode)
	(cd raster        ; make bvmscode)
	(cd sysvms        ; make bvmscode)
	rm Config.h
	date > bvmscode
Config.h.bvms:
	-rm Config.h
	ln -s Config.bvms Config.h
pccode: Config.h.pc link.com $(VMSCODE) nonunix
	(cd devices       ; make pccode)
	(cd interact      ; make pccode)
	(cd plotsub       ; make pccode)
	(cd raster        ; make pccode)
#       (cd sysvms        ; make pccode)
	rm Config.h
#       date > pccode
Config.h.pc:
	-rm Config.h
	ln -s Config.pc Config.h
