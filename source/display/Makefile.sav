MLIB=../../lib/display.$(MACHINE).a
VMSTREE=/usr/tmp/vista
OBJS=blink.o color.o conplot.o ctext.o histogram.o intbox.o intcirc.o          \
markhelp.o markstar.o plotter.o impost.o term.o text.o threed.o tvbox.o        \
tvgraph.o tvplot.o tvscale.o video.o wipe.o zap.o radplot.o         \
overlay.o markpoly.o zimvista.o
LOBJS=$(MLIB)(blink.o) $(MLIB)(color.o) $(MLIB)(conplot.o) $(MLIB)(ctext.o)   \
$(MLIB)(histogram.o) $(MLIB)(intbox.o) $(MLIB)(intcirc.o) $(MLIB)(markhelp.o)  \
$(MLIB)(markstar.o) $(MLIB)(plotter.o) $(MLIB)(impost.o) $(MLIB)(term.o)       \
$(MLIB)(text.o) $(MLIB)(threed.o) $(MLIB)(tvbox.o) $(MLIB)(tvgraph.o)          \
$(MLIB)(tvplot.o) $(MLIB)(tvscale.o) $(MLIB)(video.o) $(MLIB)(wipe.o)          \
$(MLIB)(zap.o) $(MLIB)(radplot.o) $(MLIB)(overlay.o) $(MLIB)(markpoly.o)      \
$(MLIB)(zimvista.o)
VMSCODE=blink.for color.for conplot.for histogram.for intbox.for     \
intcirc.for markstar.for plotter.for impost.for term.for text.for \
threed.for tvbox.for tvgraph.for tvplot.for video.for wipe.for zap.for \
radplot.for overlay.for markpoly.for
#
#       Teach make how to do a number of things that certain systems don't know
.SUFFIXES:
.SUFFIXES: .out .o .c .e .r .F .f .y .l .s .p .a
.F.o:
	$(CPP) $(CPPFLAGS) $*.F $*.$(FPP)
	$(FC) -c $(FFLAGS) $*.$(FPP)
	$(RM) -f $*.$(FPP)
.F.a:
	$(CPP) $(CPPFLAGS) $< $*.$(FPP)
	$(FC) -c $(FFLAGS) $*.$(FPP)
	$(AR) rv $@ $*.o
	$(RM) -f $*.$(FPP) 
	rm -f $*.o
.f.a:
	$(FC) -c $(FFLAGS) $*.f
	$(AR) rv $@ $*.o
	rm -f $*.o
.F.inc: ; $(CPP) $(CPPFLAGS) $*.F $*.inc
.c.a:
	$(CC) -c $(CFLAGS) $*.c
	$(AR) rv $@ $*.o
	rm -f $*.o


#       Teach make how to make files for export to a VMS system
.SUFFIXES: .vmsf .for .inc .vmsc .com
.vmsf.for: ; cp $*.vmsf $*.for
.vmsc.com: ; cp $*.vmsc $*.com
.f.for: ; cp $*.f $*.for
.F.for: ; $(CPP) $(VMSFLAGS) $*.F $*.for
#
datefile::Vista.h $(MLIB) tidy
	date > datefile
#       Don't let make delete the object library!
.PRECIOUS: $(MLIB)
#
$(MLIB): $(DOOBJS)
	$(MAR)
	-$(MRM)
	-ranlib $(MLIB)
#video.o:            video.F ../Vista.$(MACHINE)
#tvgraph.o:          tvgraph.F ../Vista.$(MACHINE)
#zap.o:              zap.F ../Vista.$(MACHINE)
#$(MLIB)(video.o):   video.F ../Vista.$(MACHINE)
#$(MLIB)(tvgraph.o): tvgraph.F ../Vista.$(MACHINE)
#$(MLIB)(zap.o):     zap.F ../Vista.$(MACHINE)
#xvista::Vista.h $(MLIB) tidy
#	date > datefile
#$(SLIB): $(LOBJS) $(OBJS)
#	$(MAR)
#	$(MRM)
#	-ranlib $(SLIB)
#$(SLIB)(video.o): ../Vista.$(MACHINE)
#$(SLIB)(tvgraph.o): ../Vista.$(MACHINE)
#$(SLIB)(zap.o): ../Vista.$(MACHINE)
clean:
	-rm *.o \#* *.bak
tidy:
	-rm Vista.h datefile
Vista.h:
	ln -s ../Vista.$(MACHINE) Vista.h
#       THE FOLLOWING STUFF MAKES CODE FOR THE VAXen
avmscode: Vista.h.avms $(VMSCODE)
	-mkdir $(VMSTREE)/source/display
	mv *.for $(VMSTREE)/source/display
	cp *.c $(VMSTREE)/source/display
	cp ../Vista.avms $(VMSTREE)/source/display/Vista.h
	-rm Vista.h avmscode
	date >  avmscode
Vista.h.avms:
	-rm Vista.h
	ln -s ../Vista.avms Vista.h
uvmscode: Vista.h.uvms $(VMSCODE)
	-mkdir $(VMSTREE)/source/display
	mv *.for $(VMSTREE)/source/display
	cp *.c $(VMSTREE)/source/display
	cp ../Vista.uvms $(VMSTREE)/source/display/Vista.h
	-rm Vista.h uvmscode
	date >  uvmscode
Vista.h.uvms:
	-rm Vista.h
	ln -s ../Vista.uvms Vista.h
pvmscode: Vista.h.pvms $(VMSCODE)
	-mkdir $(VMSTREE)/source/display
	mv *.for $(VMSTREE)/source/display
	cp *.c $(VMSTREE)/source/display
	cp ../Vista.pvms $(VMSTREE)/source/display/Vista.h
	-rm Vista.h pvmscode
	date >  pvmscode
Vista.h.pvms:
	-rm Vista.h
	ln -s ../Vista.pvms Vista.h
