C       Here are non-basic image processing commands.

        ELSE IF (COM .EQ. 'ALIGN') THEN
            NEEDIM = 1
            IF (GO) CALL CCALIGN(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'MASK' .OR.
     &           COM .EQ. 'UNMASK') THEN
            GO = .TRUE.
            CALL SETMASK

        ELSE IF (COM .EQ. 'MN') THEN
C            Average of image
                NEEDIM = 1
                IF (GO) CALL CCAVERAGE(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'OLDSKY') THEN
                NEEDIM = 1
                IF (GO) CALL CCOLDSKY(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'SKY' .OR. COM .EQ. 'TODSKY' .OR.
     &           COM .EQ. 'SKY4') THEN
                NEEDIM = 1
                IF (GO) CALL CCSKY(LOCIM,IMER-IMSR+1,IMEC-IMSC+1)

        ELSE IF (COM .EQ. 'WSKY') THEN
                NEEDIM = 1
                IF (GO) CALL CCWSKY(LOCIM,IMER-IMSR+1,IMEC-IMSC+1)

        ELSE IF (COM .EQ. 'ABX') THEN
C            Analyze image sections
                NEEDIM = 1
                IF (GO) CALL CCANALBOX(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'BIN') THEN
C          Bin an image
            NEEDIM = 1
            IF (GO) CALL CCBINANIMAGE(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'REPLICATE') THEN
C          Bin an image
            NEEDIM = 1
            IF (GO) CALL CCBINANIMAGE(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'EXPAND' .OR. COM .EQ. 'SAMPLE') THEN
            GO = .TRUE.
            CALL EXPAND

        ELSE IF (COM .EQ. 'PHASE') THEN
            NEEDIM = 1
            IF (GO) CALL CCPHASE(LOCIM, IMER-IMSR+1, IMEC-IMSC+1)

        ELSE IF (COM .EQ. 'SURFACE') THEN
C          Surface fit
             NEEDIM = 1
             IF (GO) CALL CCSURFACE(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'SHIFT') THEN
C          Shift.
	     NEEDIM = 1
             IF (GO) CALL CCSHIFT(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'SMOOTH') THEN
            NEEDIM = 1
            IF (GO) CALL CCSMOOTH(LOCIM,IMER-IMSR+1,IMEC-IMSC+1)

        ELSE IF (COM .EQ. 'ZAP' .OR. COM .EQ. 'LZAP') THEN
C          Median filtering
            NEEDIM = 1
            IF (GO) CALL CCZAP(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'TVZAP' .OR. COM .EQ. 'ZAPTV') THEN
            NEEDIM = -1
            IF (GO) CALL CCZAP(LOCTV,IMTVSR,IMTVER,IMTVSC,IMTVEC)

        ELSE IF (COM .EQ. 'BIGMEDIAN') THEN
C          Median of lots of images via disk I/O
            IF (GO) CALL BIGMEDIAN

        ELSE IF (COM .EQ. 'REJECT') THEN
C          n-sigma combination of lots of images via disk I/O
            IF (GO) CALL BIGMEDIAN

        ELSE IF (COM .EQ. 'MEDIAN') THEN
C          Median of images
            IF (GO) CALL MEDIANOFIMAGES

        ELSE IF (COM .EQ. 'MIN') THEN
C          Median of images
            IF (GO) CALL MEDIANOFIMAGES

        ELSE IF (COM .EQ. 'MAX') THEN
C          Median of images
            IF (GO) CALL MEDIANOFIMAGES

        ELSE IF (COM .EQ. 'SIG') THEN
C          Median of images
            IF (GO) CALL MEDIANOFIMAGES

        ELSE IF (COM .EQ. 'CROSS') THEN
C          Cross-correlation.
            NEEDIM = 2
            IMSP   = 1
            IF (GO) THEN
                IMSP = 0
                CALL CCCROSSCOR(LOCIM,IMSR,IMER,IMSC,IMEC,
     &                          LOCB, JMSR,JMER,JMSC,JMEC)
            END IF

         ELSE IF (COM .EQ. 'CROSS_OFF' .OR. COM .EQ. 'CEN_OFF') THEN
C          Cross-correlation.
             NEEDIM = 2
             IF (GO) CALL CCCROSSOFF(LOCIM,IMSR,IMER,IMSC,IMEC,
     &                          LOCB, JMSR,JMER,JMSC,JMEC)

        ELSE IF (COM .EQ. 'CONVOLVE') THEN
C          Convolution
            NEEDIM = 1
            IF (GO) CALL CCSMOOTH(LOCIM,NROW,NCOL)

        ELSE IF (COM .EQ. 'INTERP') THEN
C          Interpolation
            NEEDIM = 1
            IF (GO) CALL CCINTERP(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'MERGE') THEN
C          Merge images.
            IF (GO) CALL MERGEIM
   
        ELSE IF (COM .EQ. 'REGISTAR') THEN
            NEEDIM = 1
            IF (GO) CALL CCREGISTAR(LOCIM,IMSR,IMER,IMSC,IMEC)
    
        ELSE IF (COM .EQ. 'AXES') THEN
            NEEDIM = 1
            IF (GO) CALL CCAXES(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'ADD'  .OR.
     &           COM .EQ. 'SUBTRACT' .OR.
     &           COM .EQ. 'MULTIPLY' .OR.
     &           COM .EQ. 'DIVIDE' .OR.
     &           COM .EQ. 'AND' .OR.
     &           COM .EQ. 'OR')  THEN
             GO = .TRUE.
             CALL TWOIMAGEMATH

        ELSE IF (COM .EQ. 'TAN' .OR. COM .EQ. 'SIN' .OR.
     &           COM .EQ. 'COS' .OR. COM .EQ. 'ARCTAN' .OR.
     &           COM .EQ. 'LOG' .OR. COM .EQ. 'EXP' .OR.
     &           COM .EQ. 'LN' .OR.  COM .EQ. 'ONEOVER' .OR. 
     &           COM .EQ. 'NINT' .OR. COM .EQ. 'SQRT') THEN
             NEEDIM = 1
             IF (GO) CALL CCONEIMAGEMATH(LOCIM,IMSR,IMER,IMSC,IMEC)

	ELSE IF (COM .EQ. 'ATAN2') THEN
	     NEEDIM = 2
	     IF (GO) CALL CCDOATAN2(LOCIM,IMSR,IMER,IMSC,IMEC,
     &                              LOCB,JMSR,JMER,JMSC,JMEC)


        ELSE IF (COM .EQ. 'BL') THEN
C            Baseline correction
                NEEDIM = 1
                IF (GO) CALL CCBASELINE(LOCIM,NROW,NCOL)

        ELSE IF (COM .EQ. 'CLIP') THEN
C            Pixel value replacement
                NEEDIM = 1
                IF (GO) CALL CCCLIP(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'ROTATE') THEN
C            Rotate image
                NEEDIM = 1
                IF (GO) CALL CCROTATE(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'FLIP') THEN
C            Flip image
                NEEDIM = 1
                IF (GO) CALL CCFLIP(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'ROWFIT') THEN
                NEEDIM = 1
                IF (GO) CALL CCROWFIT(LOCIM,IMSR,IMER,IMSC,IMEC)

        ELSE IF (COM .EQ. 'FFT' .OR. COM .EQ. 'IFFT') THEN
             GO = .TRUE.
             CALL FFTOP

        ELSE IF (COM .EQ. 'FILT') THEN
             NEEDIM = 1
             IF (GO) CALL CCFILTER(LOCIM,IMER-IMSR+1,IMEC-IMSC+1)

        ELSE IF (COM .EQ. 'POWERS' .OR.
     &           COM .EQ. 'CDIV' .OR.
     &           COM .EQ. 'CMUL' .OR.
     &           COM .EQ. 'CABS' .OR.
     &           COM .EQ. 'CONJ' .OR.
     &           COM .EQ. 'IMAG' .OR.
     &           COM .EQ. 'REAL' .OR.
     &           COM .EQ. 'CMPLX') THEN
             GO = .TRUE.
             CALL COMPLEXMATH







        ELSE IF (COM .EQ. 'ROUND' .OR.
     &           COM .EQ. 'POLARGRID') THEN
             NEEDIM = 1
             IMSP = 1
             IF (GO) THEN
               IMSP = 0
               CALL CCPOLARGRID(LOCIM,IMSR,IMER,IMSC,IMEC)
             END IF

        ELSE IF (COM .EQ. 'PSFMODEL') THEN
             NEEDIM = 1
             IF (GO) CALL CCPSFMODEL(LOCIM,IMER-IMSR+1,IMEC-IMSC+1)

        ELSE IF (COM .EQ. 'PSFTRANS') THEN
             NEEDIM = 1
             IF (GO) CALL CCPSFTRANS(LOCIM,IMER-IMSR+1,IMEC-IMSC+1)

        ELSE IF (COM .EQ. 'LINCOMB') THEN
C       Fit a linear combination of images to the image.
             NEEDIM = 1
             IF (GO) CALL CCLINCOMB(LOCIM,IMSR,IMER,IMSC,IMEC)

	ELSE IF (COM .EQ. 'MARKPOLY') THEN
             GO = .TRUE.
	     CALL MARKPOLY

        ELSE IF (COM .EQ. 'HISTLIST') THEN
             NEEDIM = 1
             IF (GO) CALL CCHISTLIST(LOCIM,IMSR,IMER,IMSC,IMEC)



